var express = require('express');
var router = express.Router();
var urlToSqlQuery = require('../Helpers/urlToQuery');

var DataAccess = require('../CalimaticBLL/DataAccess/Base');

var authorized = require('../Auth/auth');
router.use('/agileproject', (req, res, next) => {
    req.TableName = "cmatrix_agile_project";
    req.Dto = require('../DataTransferObjects/AgileProjectDto');
    next();
});

router.use('/agileprojectstates', (req, res, next) => {
    req.TableName = "cmatrix_agile_project_states";
    req.Dto = require('../DataTransferObjects/AgileProjectStatesDto');
    next();
});

router.use('/backlog', (req, res, next) => {
    req.TableName = "cmatrix_agile_project_states";
    req.Dto = require('../DataTransferObjects/AgileProjectStatesDto');
    next();
})

router.use(urlToSqlQuery);
router.use(authorized);



var routes = () => {

    //GetAllAgileProjects
    router.use('/agileproject', function (req, res, next) {
        console.log(req.sqlQuery)
        DataAccess.GetAll(req, res, () => {
            next();
        });
    }, (req, res, next) => {
        res.status(200).send(req.results)
    })

    router.use('/agileprojectstates', (req, res, next) => {
        console.log(req.sqlQuery)
        DataAccess.GetAll(req, res, () => {
            next();
        });
    }, (req, res, next) => {
        res.status(200).send(req.results)
    })
    // router.use('/backlog', (req, res, next) => {
    //     console.log(req.sqlQuery)
    //     DataAccess.GetAll(req, res, () => {
    //         next();
    //     });
    // }, (req, res, next) => {
    //     console.log(req.results)
    //     res.status(200).send(req.results);
    // })
    router.use('/backlog', (req, res, next) => {
        console.log(req.sqlQuery)
        DataAccess.GetAll(req, res, async () => {
            await next();
        });
    }, (req, res, next) => {
        req.Dto = require('../DataTransferObjects/BacklogDto');
        var States = req.results;
        start(req,res,States,async (state) => {
            // await waitFor(100);
            req.sqlQuery = 'SELECT * from cmatrix_agile_backlog Where cab_ajp_key = '+state.projectkey+' and cab_state = '+state.key;
            await DataAccess.GetAll(req, res,async () => {
               state.workitem = req.results;
            });
          });
      
       // res.status(200).send(req.results);
    })


    return router;
}


module.exports = routes;

const waitFor = (ms) => new Promise(r => setTimeout(r, ms))
const asyncForEach = async (array, callback) => {
  for (let index = 0; index < array.length; index++) {
    await callback(array[index])
  }
}

const start = async (req,res,array,callback) => {
    await asyncForEach(array, callback)
    res.status(200).send(array);
  }